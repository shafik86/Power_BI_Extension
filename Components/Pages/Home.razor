@page "/"
@inject IDesignService _design
@attribute [StreamRendering]

<head>
    <style>
        body {
            margin: 0;
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Oxygen", "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
            background-color: rgb(22, 20, 24);
            color: #eee;
            user-select: none;
        }

        code {
            font-family: source-code-pro, Menlo, Monaco, Consolas, "Courier New", monospace;
        }

        .nft {
            user-select: none;
            max-width: 300px;
            margin: 5rem auto;
            border: 1px solid #ffffff22;
            background-color: #282c34;
            background: linear-gradient(0deg, rgba(40,44,52,1) 0%, rgba(17,0,32,.5) 100%);
            box-shadow: 0 7px 20px 5px #00000088;
            border-radius: .7rem;
            backdrop-filter: blur(7px);
            -webkit-backdrop-filter: blur(7px);
            overflow: hidden;
            transition: .5s all;
            hr

        {
            width: 100%;
            border: none;
            border-bottom: 1px solid #88888855;
            margin-top: 0;
        }

        ins {
            text-decoration: none;
        }

        .main {
            display: flex;
            flex-direction: column;
            width: 90%;
            padding: 1rem;
            .tokenImage

        {
            border-radius: .5rem;
            max-width: 100%;
            height: 250px;
            object-fit: cover;
        }

        .description {
            margin: .5rem 0;
            color: #a89ec9;
        }

        .tokenInfo {
            display: flex;
            justify-content: space-between;
            align-items: center;
            .price

        {
            display: flex;
            align-items: center;
            color: #ee83e5;
            font-weight: 700;
            ins

        {
            margin-left: -.3rem;
            margin-right: .5rem;
        }

        }

        .duration {
            display: flex;
            align-items: center;
            color: #a89ec9;
            margin-right: .2rem;
            ins

        {
            margin: .5rem;
            margin-bottom: .4rem;
        }

        }
        }

        .creator {
            display: flex;
            align-items: center;
            margin-top: .2rem;
            margin-bottom: -.3rem;
            ins

        {
            color: #a89ec9;
            text-decoration: none;
        }

        .wrapper {
            display: flex;
            align-items: center;
            border: 1px solid #ffffff22;
            padding: .3rem;
            margin: 0;
            margin-right: .5rem;
            border-radius: 100%;
            box-shadow: inset 0 0 0 4px #000000aa;
            img

        {
            border-radius: 100%;
            border: 1px solid #ffffff22;
            width: 2rem;
            height: 2rem;
            object-fit: cover;
            margin: 0;
        }

        }
        }
        }

        ::before {
            position: fixed;
            content: "";
            box-shadow: 0 0 100px 40px #ffffff08;
            top: -10%;
            left: -100%;
            transform: rotate(-45deg);
            height: 60rem;
            transition: .7s all;
        }

        &:hover {
            border: 1px solid #ffffff44;
            box-shadow: 0 7px 50px 10px #000000aa;
            transform: scale(1.015);
            filter: brightness(1.3);
            :: before

        {
            filter: brightness(.5);
            top: -100%;
            left: 200%;
        }

        }
        }

        .bg {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);

        {
            font-size: 20rem;
            filter: opacity(0.5);
        }

        }

        /* CSS */
        .button-36 {
            background-image: linear-gradient(92.88deg, #455EB5 9.16%, #5643CC 43.89%, #673FD7 64.72%);
            border-radius: 8px;
            border-style: none;
            box-sizing: border-box;
            color: #FFFFFF;
            cursor: pointer;
            flex-shrink: 0;
            font-family: "Inter UI","SF Pro Display",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen,Ubuntu,Cantarell,"Open Sans","Helvetica Neue",sans-serif;
            font-size: 16px;
            font-weight: 500;
            height: 3rem;
            padding: 0 1.6rem;
            text-align: center;
            text-shadow: rgba(0, 0, 0, 0.25) 0 3px 8px;
            transition: all .5s;
            user-select: none;
            -webkit-user-select: none;
            touch-action: manipulation;
        }

            .button-36:hover {
                box-shadow: rgba(80, 63, 205, 0.5) 0 1px 30px;
                transition-duration: .1s;
            }

        a.button {
            color: #fff;
            text-decoration: none;
        }
    </style>
</head>

<PageTitle>Home</PageTitle>

<h1 style="text-align-last:center;" class="pa-4 m-2 p-2">@Text1</h1>
@if (isLoading == true)
{
    <p> Loading list dashboards ... </p>
}
else
{
    <div class="row col-12">
        @foreach (var design in Designs)
        {
            @* <div class="bg">
    </div> *@
            <div class="nft">
                <div class='main'>
                    <img class="tokenImage" src="@design.Thumb" alt="NFT" />
                    <h3>@design.Name</h3>
                    <p class='description' style="height:100px;">@design.Description</p>
                    <hr />
                    <div class="creator">
                        <div class="row inline col-12">
                            <div class="col-6">
                                <button class="button-36"><a class="button" href="@($"DashboardView/{design.Id}")">View</a></button>
                            </div>
                            <div class="col-6">
                                <button class="button-36"><a class="button" href="@($"Edit/{design.Id}")">Edit</a></button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}

@code {

    public string Text1 { get; set; } = "Design Templates";
    public IEnumerable<PBIDesign> Designs { get; set; } = new List<PBIDesign>();
    private int selectedDesignID;
    public bool isLoading { get; set; } = true;

    protected override async Task OnInitializedAsync()
    {

        await Task.Delay(500);
        await loadTempaltes();

    }
    private async Task OnDesignIdSelected()
    {
        var x = Designs.FirstOrDefault(e => e.Id == selectedDesignID);
        Text1 = x.Name;

        StateHasChanged();
    }

    public async Task loadTempaltes()
    {
        Designs = await _design.getAllDesign();
        isLoading = false;
    }

}
